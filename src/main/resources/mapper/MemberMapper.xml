<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >

<mapper namespace="com.library.mapper.MemberMapper">
    <!-- 회원 목록 조회 - 관리자 -->
    <select id="getAllMembers" resultType="com.library.model.Member">
        SELECT * FROM MEMBERS
    </select>

    <!-- 회원 상세 조회 (membersId 기반) -->
    <select id="getMemberById" resultType="com.library.model.Member" parameterType="int">
        SELECT * FROM MEMBERS WHERE MEMBERS_ID = #{membersId}
    </select>
    
    <!-- 회원 상세 조회 (username 기반) -->
    <select id="getMemberByUsername" resultType="com.library.model.Member" parameterType="String">
        SELECT * FROM MEMBERS WHERE USERNAME = #{username}
    </select>
    
    <!-- 회원 상세 조회 (email 기반) -->
    <select id="getMemberByEmail" resultType="com.library.model.Member" parameterType="String">
        SELECT * FROM MEMBERS WHERE EMAIL = #{email}
    </select>
    
    <!-- 회원 정보 수정 -->
    <!-- 1) 회원 - 내 정보 수정 : password, email, mobile, zipcode, address, addressDetail -->
    <update id="updateMemberInfo" parameterType="com.library.model.Member">
        UPDATE MEMBERS 
        SET	PASSWORD = #{password}, 
        	EMAIL = #{email}, 
        	MOBILE = #{mobile}, 
        	ZIPCODE = #{zipcode}, 
        	ADDRESS = #{address}, 
        	ADDRESS_DETAIL = #{addressDetail}
	    WHERE MEMBERS_ID = #{membersId}
    </update>
    
    <!-- 2) 회원 - 탈퇴 : status, leaveDate -->
    <update id="updateMemberLeave" parameterType="com.library.model.Member">
        UPDATE MEMBERS 
        SET STATUS = #{status}, 
        	LEAVE_DATE = #{leaveDate}
	    WHERE MEMBERS_ID = #{membersId}
    </update>
    
    <!-- 3) 관리자 - 회원카드 등록 : status, cardNum -->
    <update id="updateMemberCardnum" parameterType="com.library.model.Member">
        UPDATE MEMBERS 
        SET STATUS = #{status}, 
        	CARD_NUM = #{cardNum}
	    WHERE MEMBERS_ID = #{membersId}
    </update>
    
    <!-- 4) 도서 시스템 - 도서 연체 : status -->
    <update id="updateMemberOverdue" parameterType="com.library.model.Member">
        UPDATE MEMBERS 
        SET STATUS = #{status}
	    WHERE MEMBERS_ID = #{membersId}
    </update>
    
    <!-- 5) 도서 시스템 - 도서 대출 : loanCount -->
    <update id="updateMemberLoanCount" parameterType="com.library.model.Member">
        UPDATE MEMBERS 
        SET LOAN_COUNT = #{loanCount}
	    WHERE MEMBERS_ID = #{membersId}
    </update>
    
    <!-- 회원 등록 -->
    <insert id="insertMember" parameterType="com.library.model.Member">
	    <selectKey keyProperty="membersId" resultType="java.lang.Integer" order="BEFORE">
	        SELECT SQ_MEMBERS.NEXTVAL FROM DUAL
	    </selectKey>
        INSERT INTO MEMBERS (
        	MEMBERS_ID, USERNAME, PASSWORD, 
        	NAME, EMAIL, MOBILE, ZIPCODE, ADDRESS, ADDRESS_DETAIL, 
        	STATUS, CARD_NUM, LOAN_COUNT, 
        	JOIN_DATE, LEAVE_DATE
        ) VALUES (
        	#{membersId}, #{username}, #{password}, 
        	#{name}, #{email}, #{mobile}, #{zipcode}, #{address}, #{addressDetail},
        	#{status}, #{cardNum}, #{loanCount}, 
        	#{joinDate}, #{leaveDate}
       	)
    </insert>

    <!-- 회원 삭제 -->
    <delete id="deleteMember" parameterType="int">
        DELETE FROM MEMBERS WHERE MEMBERS_ID = #{membersId}
    </delete>
</mapper>